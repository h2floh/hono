{{- $args := dict "dot" . "component" "adapter-http-vertx" "name" "adapter-http-vertx-conf" -}}
apiVersion: v1
kind: Secret
metadata:
  {{- include "hono.metadata" $args | nindent 2 }}
type: Opaque
stringData:
  application.yml: |
    hono:
      app:
        maxInstances: {{ .Values.adapters.http.hono.app.maxInstances }}
      http:
        {{- if .Values.adapters.http.hono.http }}
        {{- .Values.adapters.http.hono.http | toYaml | nindent 8 }}
        {{- else }}
        bindAddress: 0.0.0.0
        insecurePortBindAddress: 0.0.0.0
        insecurePortEnabled: true
        keyPath: /etc/hono/key.pem
        certPath: /etc/hono/cert.pem
        tenantIdleTimeout: {{ .Values.adapters.defaultTenantIdleTimeout | quote }}
        {{- end }}
      {{- include "hono.healthServerConfig" .Values.adapters.http.hono.healthCheck | nindent 6 }}
      {{- include "hono.serviceClientConfig" $args | nindent 6 }}
{{- if not .Values.adapters.http.extraSecretMounts }}
data:
  key.pem: {{ .Files.Get "hono-demo-certs-jar/http-adapter-key.pem" | b64enc }}
  cert.pem: {{ .Files.Get "hono-demo-certs-jar/http-adapter-cert.pem" | b64enc }}
  trusted-certs.pem: {{ .Files.Get "hono-demo-certs-jar/trusted-certs.pem" | b64enc }}
  adapter.credentials: {{ .Files.Get "example/http-adapter.credentials" | b64enc }}
{{- end }}